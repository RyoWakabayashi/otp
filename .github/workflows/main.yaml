##
## This workflow handles testing of pull requests and pushes.
## It also publishes some packages to any new Erlang/OTP release
##
## To speed this up it would be nice if one could share docker
## images inbetween different jobs, but at the moment this is
## not possible so we need to rebuild all of Erlang/OTP multiple
## times.
##
## When ghcr.io support using the GITHUB_TOKEN we should migrate
## over to use it instead as that should allow us to use the
## built-in caching mechanisms of docker/build-push-action@v2.
## However as things are now we use docker directly to make things
## work.
##

name: Build and check Erlang/OTP

on:
  push:
  pull_request:

jobs:

  pack:
    name: Pack the Erlang/OTP tar.gz
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create initial pre-release tar 
        run: .github/scripts/init-pre-release.sh
      - name: Upload source tar archive
        uses: actions/upload-artifact@v2
        with:
          name: otp_git_archive
          path: otp_src.tar.gz

  build-macos:
    env:
      RELEASE_LIBBEAM: yes
      TARGET_ARCH: aarch64-apple-ios
    name: Build Erlang/OTP for iOS
    runs-on: macos-latest
    needs: pack
    steps:
      - name: Download source archive
        uses: actions/download-artifact@v2
        with:
          name: otp_git_archive

      - name: Compile Erlang
        run: |
          tar -xzf ./otp_src.tar.gz
          cd otp
          export ERL_TOP=`pwd`
          export MAKEFLAGS="-j4 -O"
          export ERLC_USE_SERVER=true
          ./otp_build configure --xcomp-conf=./xcomp/erl-xcomp-arm64-ios.conf --without-ssl
          ./otp_build boot -a
          ./otp_build release -a
      
      - name: Package .xcframework
        run: |
          cd otp
          export BUILD_ARCH=`./erts/autoconf/config.guess`
          export LIBS=`find . -not -path "*${BUILD_ARCH}*" -path "*${TARGET_ARCH}*" -not -name "*_st.a" -not -name "*_r.a" -name "*.a" | awk '{ "basename " $1 | getline name; names[name] = $1 } END { for (n in names) { print names[n] }}'`
          libtool -static -o liberlang.a $LIBS
          xcodebuild -create-xcframework -output ./liberlang.xcframework -library liberlang.a

      - name: Upload framework
        uses: actions/upload-artifact@v2
        with:
          name: ios_framework_${TARGET_ARCH}
          path: otp/liberlang.xcframework
